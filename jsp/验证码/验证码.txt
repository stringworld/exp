//配置web.xml
	<servlet>
		<servlet-name>codeImage</servlet-name>
		<servlet-class>my.web.CodeImage</servlet-class>
		<init-param>
			<param-name>width</param-name>
			<param-value>80</param-value>
		</init-param>
		<init-param>
			<param-name>height</param-name>
			<param-value>23</param-value>
		</init-param>
		<init-param>
			<param-name>codeCount</param-name>
			<param-value>4</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>codeImage</servlet-name>
		<url-pattern>/codeImage</url-pattern>
	</servlet-mapping>

//java代码 my.web.CodeImage类
package my.web;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.Random;

import javax.imageio.ImageIO;
import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

public class CodeImage extends HttpServlet {
	// 验证码图片的宽度。
	private int width = 80;
	// 验证码图片的高度。
	private int height = 23;
	// 验证码字符个数
	private int codeCount = 4;
	// 字体高度
	private int fontHeight;
	private int x = 0;
	private int codeY;
	char[] codeSequence = { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J',
			'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W',
			'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',
			'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w',
			'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' };

	public void doGet(HttpServletRequest arg0, HttpServletResponse arg1)
			throws ServletException, IOException {
		doPost(arg0, arg1);
	}

	public void doPost(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		// 定义图像buffer
		BufferedImage buffImg = new BufferedImage(width, height,
				BufferedImage.TYPE_INT_RGB);
		Graphics2D g = buffImg.createGraphics();
		// 创建一个随机数生成器类
		Random random = new Random();
		// 将图像填充为白色
		g.setColor(getRandColor(220, 250));
		g.fillRect(0, 0, width, height);
		// 创建字体，字体的大小应该根据图片的高度来定。
		Font font = new Font("Arial Bold", Font.BOLD | Font.ITALIC,
				fontHeight - 5);
		// 设置字体。
		g.setFont(font);
		// 画边框。
		g.setColor(Color.pink);
		g.drawRect(0, 0, width - 1, height - 1);
		// 随机产生150条干扰线，使图象中的认证码不易被其它程序探测到。
		g.setColor(getRandColor(120, 200));
		for (int i = 0; i < 150; i++) {
			int x = random.nextInt(width);
			int y = random.nextInt(height);
			int xl = random.nextInt(10);
			int yl = random.nextInt(10);
			g.drawLine(x, y, x + xl, y + yl);
		}
		// 随机产生450个干扰点，使图象中的认证码不易被其它程序探测到。
		g.setColor(getRandColor(120, 200));
		for (int i = 0; i < 550; i++) {
			int x = random.nextInt(width);
			int y = random.nextInt(height);
			g.drawOval(x, y, 0, 0);
		}
		// randomCode用于保存随机产生的验证码，以便用户登录后进行验证。
		StringBuffer randomCode = new StringBuffer();
		// 随机产生codeCount数字的验证码。
		for (int i = 0; i < codeCount; i++) {
			// 得到随机产生的验证码数字。
			String strRand = String.valueOf(codeSequence[random.nextInt(62)]);
			// 产生随机的颜色分量来构造颜色值，这样输出的每位数字的颜色值都将不同。
			g.setColor(getRandColor(20, 130));
			// 用随机产生的颜色将验证码绘制到图像中。
			g.drawString(strRand, (i + 1) * x - 7, codeY - 5);
			// 将产生的四个随机数组合在一起。
			randomCode.append(strRand);
		}
		// 将四位数字的验证码保存到Session中。
		HttpSession session = req.getSession();
		session.setAttribute("validateCode", randomCode.toString());
		// 禁止图像缓存。
		resp.setHeader("Pragma", "no-cache");
		resp.setHeader("Cache-Control", "no-cache");
		resp.setDateHeader("Expires", 0);
		resp.setContentType("image/jpeg");
		// 将图像输出到Servlet输出流中。
		ServletOutputStream sos = resp.getOutputStream();
		ImageIO.write(buffImg, "jpeg", sos);
		sos.close();
	}

	/**
	 * 从web.xml中获取初始信息
	 */
	public void init() throws ServletException {
		// 宽度
		String strWidth = this.getInitParameter("width");
		// 高度
		String strHeight = this.getInitParameter("height");
		// 字符个数
		String strCodeCount = this.getInitParameter("codeCount");
		// 将配置的信息转换成数值
		try {
			if (strWidth != null && strWidth.length() != 0) {
				width = Integer.parseInt(strWidth);
			}
			if (strHeight != null && strHeight.length() != 0) {
				height = Integer.parseInt(strHeight);
			}
			if (strCodeCount != null && strCodeCount.length() != 0) {
				codeCount = Integer.parseInt(strCodeCount);
			}
		} catch (NumberFormatException e) {
		}
		x = width / (codeCount + 1);
		fontHeight = height;
		codeY = height;
	}

	/**
	 * 产生随机颜色
	 */
	public static Color getRandColor(int num1, int num2) {
		Random random = new Random();
		if (num1 > 255)
			num1 = 255;
		if (num2 > 255)
			num2 = 255;
		int r = num1 + random.nextInt(num2 - num1);
		int g = num1 + random.nextInt(num2 - num1);
		int b = num1 + random.nextInt(num2 - num1);
		return new Color(r, g, b);
	}
}


//html代码	根目录下index.html，使用时需要根据当前页面路径修改src
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<title>管理员登录</title>
<style type="text/css">

.a{
font-size:14px;
 color:#CCC; 
 cursor:hand;
}
</style>
</head>
<script>
	function check_admin(form)
	{
		if(form.user.value=="")
		{
			alert("请输入管理员账号!");
			form.user.focus();
			return false;
		}
		if(form.pass.value=="")
		{
			alert("请输入管理员密码!");
			form.pass.focus();
			return false;
		}
		if (form.verify.value=="")
		{
			alert("请输入验证码!");
			form.verify.focus();
			return false;
		}		
	}
</script>
<body>
<center>
<form action="verify.jsp" method="post" onSubmit="return check_admin(this);">
<table width="400" border="1" bordercolor="#99CCFF" cellpadding="0" cellspacing="0" style="border-collapse:collapse">
  <tr>
    <td height="40" colspan="2" align="center"><font color="red">eBuy电子商城后台登录</font></td>
    </tr>
  <tr>
    <td height="40" align="right">账号：&nbsp;</td>
    <td width="200" align="left" valign="middle">&nbsp;<input type="text" name="user" size="20" /></td>
  </tr>
  <tr>
    <td height="40" align="right">密码：&nbsp;</td>
    <td height="40" align="left" valign="middle">&nbsp;<input type="password" name="pass" size="21" /></td>
  </tr>
  <tr>
    <td height="40" align="right">系统验证码：&nbsp;</td>
    <td>&nbsp;<img src="codeImage" id="codeImage" /><a title="点击切换" onclick="return changeCodeImage('codeImage')"  class="a">看不清，换一张</a></td>
  </tr>
  <tr>
    <td height="40" align="right">输入验证码：&nbsp;</td>
    <td>&nbsp;<input type="text" name="code1" maxlength="4" value=""/>&nbsp;</td>
  </tr>
</table>
</form>
</center>
<script>
   	function changeCodeImage(id){
   		document.getElementById(id).src="codeImage?"+Math.random();
   	};
</script>
</body>
</html>




//验证代码 jsp代码
<%@ page contentType="text/html; charset=gb2312" language="java" import="java.sql.*" errorPage="" %>
<html>
<head>
<title>登录验证页面</title>
</head>
<body>
<% 
 
 String Code = (String)request.getSession().getAttribute("validateCode");
 String codeIm = request.getParameter("code1");
 
 
 String strUser=request.getParameter("user");
 String strPass=request.getParameter("pass");

 if (strUser.equals("admin") && strPass.equals("admin"))
		out.println("<h3>用户名和密码正确!</h3>");
 else
		out.println("<h3>用户名或密码错误!</h3>");
 
 if(Code.equals(codeIm))
	 out.println("<h3>验证码正确！！！！！</h3>");
 else
	 out.println("<h3>验证码错误！！！！验证码区分大小写</h3>");
%>
</body>
</html>