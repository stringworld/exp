http://www.open-open.com/lib/view/open1416647023164.html

第一步：
1.创建ssh key。首先查看存不存在.ssh文件夹，一般在C:\Users\zj\  在git bash 中输入 cd ~/.ssh
若存在则备份，不存在执行

2.
git config --global user.name "github用户名"
git config --global user.email "注册时添加的邮箱"

3.
ssh-keygen -t rsa -C "注册时添加的邮箱"

你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可，由于这个Key也不是用于军事目的，所以也无需设置密码。
如果一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。

第二部：
1.
登陆GitHub，打开“Account settings”，“SSH Keys”页面：
然后，点“Add SSH Key”，填上任意Title(也可以不填，系统会自动添加)，在Key文本框里粘贴id_rsa.pub文件的内容：



当然，GitHub允许你添加多个Key。假定你有若干电脑，你一会儿在公司提交，一会儿在家里提交，只要把每台电脑的Key都添加到GitHub，就可以在每台电脑上往GitHub推送了。

现在，我们根据GitHub的提示，在本地的learngit仓库下运行命令：

git remote add origin git@github.com:cqcre/cqc.git

请千万注意，把上面的 cqcre 替换成你自己的GitHub账户名，否则，你在本地关联的就是我的远程库，关联没有问题，但是你以后推送是推不上去的，因为你的SSH Key公钥不在我的账户列表中。

添加后，远程库的名字就是origin，这是Git默认的叫法，也可以改成别的，但是origin这个名字一看就知道是远程库


如果以上的不行，那就用下面的：

http://blog.csdn.net/withiter/Article/details/8650242

http://www.cnblogs.com/sorex/archive/2011/08/10/2132359.html

http://m.blog.csdn.net/blog/u011796274/38682839